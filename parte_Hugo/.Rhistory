library(ggplot2)
ggplot(newStudent, aes(x=Gender,y=Exercise)) +
geom_boxplot(color="red",outlier.colour="red") +
geom_point(position = position_jitter(h=0,w=0.3)) +
xlab('Sexo') +
ylab('Horas de exercício por semana')
#coord_flip()
library(ggplot2)
library(Lock5Data)
data(newStudent)
ggplot(newStudent, aes(x=Gender,y=Exercise)) +
geom_boxplot(color="red",outlier.colour="red") +
geom_point(position = position_jitter(h=0,w=0.3)) +
xlab('Sexo') +
ylab('Horas de exercício por semana')
#coord_flip()
data(newStudent)
library(Lock5Data)
data(newStudent)
data(newStudent)
library(Lock5Data)
require(Lock5Data)
install.packages("Lock5Data")
library(Lock5Data)
install.packages(c("DBI", "dplyr", "future", "jsonlite", "R6", "Rcpp", "rmarkdown", "tibble"))
library(Lock5Data)
data(newStudent)
library(Lock5Data)
data("StudentSurvey")
#with(StudentSurvey, summary(Exercise))
with(StudentSurvey, summary(Gender))
with(StudentSurvey, by(Exercise, Gender, mean, na.rm = TRUE))
newStudent = with(StudentSurvey, StudentSurvey[!is.na(Exercise), ])
library(ggplot2)
n = with(newStudent, by(Exercise, Gender, length))
B = 1000
female.samples = with(newStudent, matrix(sample(Exercise[Gender == "F"], size = n[1] *
B, replace = TRUE), B, n[1]))
male.samples = with(newStudent, matrix(sample(Exercise[Gender == "M"], size = n[2] *
B, replace = TRUE), B, n[2]))
female.means = apply(female.samples, 1, mean)
male.means = apply(male.samples, 1, mean)
boot.stat = male.means - female.means
ggplot(data.frame(x = boot.stat), aes(x = x)) + geom_density()
xbars = with(newStudent, by(Exercise, Gender, mean))
me = 2 * sd(boot.stat)
(xbars[2] - xbars[1]) + c(-1, 1) * me
#round((xbars[2] - xbars[1]) + c(-1, 1) * me, 1)
?StudentSurvey
library(Lock5Data)
data("StudentSurvey")
?StudentSurvey
